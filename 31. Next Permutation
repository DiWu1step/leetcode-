//
The main idea is to find the index of num to change. We do this by checking 
whether it is an ascending order from the end to the beginning of that array.
Then we make an mark on it.
To change the pre num, we need to find the num greater than it but the minium one in all greater nums.
we sort the nums after mark(inclusive) and then compare the mark-1 to the new order array
to find the first greater nums, then swap them.
//

public class Solution {
    public void nextPermutation(int[] nums) {
        int len = nums.length;
        int mark=0;
        for(int i=len-1;i>0;i--){
            if(nums[i]>nums[i-1]){
                mark = i;
                break;
            }
        }
        Arrays.sort(nums,mark,len);
        if(mark>0){
            int index = mark;
            while(nums[index]<=nums[mark-1]) index++;
            //swap
            int temp = nums[index];
            nums[index] = nums[mark-1];
            nums[mark-1] = temp;
        }

    }
}
